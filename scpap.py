import streamlit as st
import pandas as pd
import re
from collections import Counter
import random

st.set_page_config(page_title="–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –º–∏—Å—Å–∏–π", layout="wide")

# –ó–∞–≥—Ä—É–∂–∞–µ–º CSV
@st.cache_data
def load_data():
    return pd.read_csv("rope_hero_reviews.csv")

df = load_data()

st.title("–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –º–∏—Å—Å–∏–π –∏ –∞–Ω–∞–ª–∏–∑ –æ—Ç–∑—ã–≤–æ–≤")
st.markdown("–û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –¥—Ä—É–∑—å—è–º: –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑–≤–µ—Ä–Ω–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ [Streamlit Cloud](https://share.streamlit.io) –∏–ª–∏ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏.")

# --- –§–∏–ª—å—Ç—Ä –æ—Ç–∑—ã–≤–æ–≤ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º ---
st.header("üîç –ü–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º")
search_term = st.text_input("–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–º–∏—Å—Å–∏—è', '–±–æ—Å—Å'):")

if search_term:
    filtered = df[df['content'].str.contains(search_term, case=False, na=False)]
    st.write(f"–ù–∞–π–¥–µ–Ω–æ {len(filtered)} –æ—Ç–∑—ã–≤–æ–≤:")
    st.dataframe(filtered[['content']].head(20))

# --- –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–¥–µ–π –º–∏—Å—Å–∏–π ---
st.header("–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–¥–µ–π –º–∏—Å—Å–∏–π –∏–∑ –æ—Ç–∑—ã–≤–æ–≤")

mission_phrases = [
    r'–¥–æ–±–∞–≤—å—Ç–µ.*?\.', r'—Å–¥–µ–ª–∞–π—Ç–µ.*?\.', r'–ø—Ä–µ–¥–ª–∞–≥–∞—é.*?\.',
    r'—è –±—ã —Ö–æ—Ç–µ–ª.*?\.', r'–º–Ω–µ –±—ã —Ö–æ—Ç–µ–ª–æ—Å—å.*?\.', r'—Ö–æ—á—É –º–∏—Å—Å–∏—é.*?\.'
]

suggestions = []
for text in df['content'].dropna():
    for pattern in mission_phrases:
        found = re.findall(pattern, text.lower())
        suggestions.extend(found)

unique_missions = list(set(s.strip().capitalize() for s in suggestions if len(s.strip()) > 10))

if unique_missions:
    st.success(f"–ù–∞–π–¥–µ–Ω–æ {len(unique_missions)} –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –º–∏—Å—Å–∏–π")
    st.write(random.sample(unique_missions, min(10, len(unique_missions))))
else:
    st.warning("–ù–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —Ñ—Ä–∞–∑ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.")

# --- –ü—Ä–æ—Å—Ç–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∏—Å—Å–∏–π –ø–æ –∫–æ–º–∞–Ω–¥–µ ---
st.header("üéÆ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –º–∏—Å—Å–∏–∏ –ø–æ –∫–æ–º–∞–Ω–¥–µ")
user_command = st.text_input("–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É: (–Ω–∞–ø—Ä–∏–º–µ—Ä, '—Å–¥–µ–ª–∞–π –º–∏—Å—Å–∏—é —Å –±–æ—Å—Å–æ–º' –∏–ª–∏ '–º–∏—Å—Å–∏—è —Å –º–∞—à–∏–Ω–æ–π')")

# –°–ª–æ–≤–∞—Ä—å –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –∏ –ø—Ä–∏–º–µ—Ä–æ–≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
mission_keywords = {
    '–±–æ—Å—Å': ["–°—Ä–∞–∑–∏—Ç—å—Å—è —Å –≥–∏–≥–∞–Ω—Ç—Å–∫–∏–º –±–æ—Å—Å–æ–º –≤ —Ü–µ–Ω—Ç—Ä–µ –≥–æ—Ä–æ–¥–∞", "–ü–æ–±–µ–¥–∏—Ç—å –º—É—Ç–∞–Ω—Ç–∞ —Å —Å—É–ø–µ—Ä—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è–º–∏ –Ω–∞ –∞—Ä–µ–Ω–µ"],
    '–≤—Ä–∞–≥': ["–£–Ω–∏—á—Ç–æ–∂–∏—Ç—å –≤–æ–ª–Ω—É –≤—Ä–∞–≥–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ", "–ó–∞—â–∏—Ç–∏—Ç—å –±–∞–∑—É –æ—Ç –Ω–∞–ø–∞–¥–µ–Ω–∏—è –ø—Ä–µ—Å—Ç—É–ø–Ω–∏–∫–æ–≤"],
    '–º–∞—à–∏–Ω–∞': ["–£–≥–Ω–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≥—Ä—É–∑–æ–≤–∏–∫ –ø–æ–¥ –æ—Ö—Ä–∞–Ω–æ–π", "–£—Å—Ç—Ä–æ–∏—Ç—å –≥–æ–Ω–∫—É –ø–æ —É–ª–∏—Ü–∞–º –≥–æ—Ä–æ–¥–∞"],
    '—â—É–ø–∞–ª—å—Ü–∞': ["–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —â—É–ø–∞–ª—å—Ü–∞, —á—Ç–æ–±—ã –∑–∞—Ö–≤–∞—Ç–∏—Ç—å –≤—Ä–∞–∂–µ—Å–∫–∏–π –≤–µ—Ä—Ç–æ–ª–µ—Ç", "–°–ª–æ–º–∞—Ç—å –∑–∞—â–∏—Ç—É –±–∞–∑—ã —Å –ø–æ–º–æ—â—å—é —Å—É–ø–µ—Ä—â—É–ø–∞–ª–µ—Ü"]
}

generated = []
if user_command:
    for key, ideas in mission_keywords.items():
        if key in user_command.lower():
            generated.extend(ideas)

if generated:
    st.subheader(" –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–¥–µ–∏ –º–∏—Å—Å–∏–π:")
    st.write(random.choice(generated))
else:
    if user_command:
        st.info("–ö–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤ –∫–æ–º–∞–Ω–¥–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: –±–æ—Å—Å, –≤—Ä–∞–≥, –º–∞—à–∏–Ω–∞, —â—É–ø–∞–ª—å—Ü–∞")





